
audiomix_setup:

		; Set all audio mixer coefficients to something sensible
		ldx #$00
		lda #$30
aml1:
		jsr audiomix_setcoefficient
		inx
		bne aml1

		; Enable audio amplifier for Nexys4 series boards
		ldx #$fe
		lda #$01
		jsr audiomix_setcoefficient

		; Maximum gain on headphones/speaker
		ldx #$1f
		lda #$ff
		jsr audiomix_setcoefficient

		; For modem1 output, just have the SIDs at a reasonable volume
		ldx #$40
		lda #$00
aml2:		jsr audiomix_setcoefficient
		inx
		cpx #$60
		bne aml2
		ldx #$40		
		lda #$5f
		jsr audiomix_setcoefficient
		inx
		jsr audiomix_setcoefficient
		inx
		jsr audiomix_setcoefficient
		inx
		jsr audiomix_setcoefficient

		; Set microphones to full gain
		ldx #$54
		lda #$ff
		jsr audiomix_setcoefficient
		inx
		jsr audiomix_setcoefficient
		inx
		jsr audiomix_setcoefficient
		inx
		jsr audiomix_setcoefficient		

		; and set master volume gain to something sensible
		ldx #$5e
		lda #$ff ; bit 0 must be set for coefficient $5e, to allow modem to be PCM audio master
		jsr audiomix_setcoefficient
		inx
		jsr audiomix_setcoefficient
		rts

audiomix_setcoefficient:
		STX audiomix_addr

		; wait 17 cycles before writing (16 + start of read instruction)
		; to give time to audio mixer to fetch the 16-bit coefficient, before
		; we write to half of it (which requires the other half loaded, so that the
		; write to the 16-bit register gets the correct other half).
		; note that bit $1234 gets replaced in kickstart by monitor_load when doing
		; hot-patching, so we can't use that instruction for the delay

		; simple solution: write to address register several times to spend the time.
		; 16 cycles here. then the sta of the data gives us 3 more cycles, so we are fine.
		stx audiomix_addr
		stx audiomix_addr
		stx audiomix_addr
		stx audiomix_addr

		; update coefficient
		sta audiomix_data
		rts

